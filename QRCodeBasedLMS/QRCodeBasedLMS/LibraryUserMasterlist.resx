<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bunifuElipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnChooses.Iconimage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>